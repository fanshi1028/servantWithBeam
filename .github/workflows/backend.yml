name: "Backend Build"
on:
  pull_request:
  push:
jobs:
    backend:
        name: backend/${{matrix.release}}/ghc${{matrix.ghc}}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, macos-latest]
                ghc: [865, 884, 8104]
                sedArg: ["", "''"]
                release: ["linux", "osx", "windows"]
                exclude:
                  - os: ubuntu-latest
                    sedArg: "''"
                  - os: macos-latest
                    sedArg: ""
                    # no osx on ubuntu
                  - os: ubuntu-latest
                    release: "osx"
                    # only osx on macos
                  - os: macos-latest
                    release: "linux"
                  # - os: macos-latest
                    # release: "static"
                  - os: macos-latest
                    release: "windows"
                    # no 8102 for osx and linux
                  - release: "windows"
                    ghc: 865
                  - release: "windows"
                    ghc: 884
                # include:
                #   - release: "static"
                #     cache: "static-haskell-nix"

        runs-on: ${{matrix.os}}
        if: ${{ !contains(github.event.head_commit.message, '[frontend]') && !contains(github.event.head_commit.message, '[js]') && !contains(github.event.head_commit.message, '[native]') && !contains(github.event.head_commit.message, '[mobile]') }}
        steps:
            - uses: actions/checkout@v2.3.4
            - uses: cachix/install-nix-action@v12
              # with:
              #   install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20201221_9fab14a/install
              #   extra_nix_config: |
              #     experimental-features = nix-command flakes
              #
            - uses: cachix/cachix-action@v8
              with:
                  name: servant-with-beam
                  authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
                  # extraPullNames: ${{ matrix.cache }}
            - name: add haskell.nix pub keys, add haskell.nix substituters
              run: |
                sed -i ${{matrix.sedArg}} '/^trusted-public-keys =/ s/$/ hydra.iohk.io:f\/Ea+s+dFdN+3Y\/G+FDgSq+a5NEWhJGzdjvKNGv0\/EQ=/' ~/.config/nix/nix.conf
                sed -i ${{matrix.sedArg}} '/^substituters =/ s/$/ https:\/\/hydra.iohk.io/' ~/.config/nix/nix.conf
            - name: nix-build
              run: nix-build -j4 --argstr compiler ghc${{matrix.ghc}} --arg default false -A servant-with-beam.${{matrix.release}}
            # https://github.com/actions/upload-artifact/issues/92
            # https://github.com/minvws/nl-covid19-notification-app-community-website/blob/0b70c8ed7305fc3ff2e0726b8e1cf32ed39f27fb/.github/workflows/deploy.yml#L15
            # NOTE Workaround for artifacts and deploy not liking symlinks to read-only paths.
            - name: Copy artifacts
              run: |
                mkdir build
                cp -r result/*  build/
                chmod -R +w build/
            - name: upload artifact
              uses: actions/upload-artifact@v2
              with:
                name: backend-${{matrix.release}}-ghc${{matrix.ghc}}
                path: build
            - name: nix-shell
              if: matrix.release == 'osx' && matrix.ghc == '8104'
              working-directory: ./backend
              run: nix-shell -j4

# FIXME dependencies text-icu can't build on windows and fuck this up
# NOTEhttps://github.com/hasufell/stack2cabal/blob/master/.github/workflows/release.yaml
# NOTE https://kodimensional.dev/github-actions
